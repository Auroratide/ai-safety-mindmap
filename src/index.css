@import url("/fonts/urbanist/font-face.css");
@import url("/fonts/sono/font-face.css");

*, *::before, *::after {
	box-sizing: border-box;
	margin: 0;
}

:root {
	--c-blue-dark: oklch(55% 0.119 250);
	--c-blue-light: oklch(64% 0.142 250);
	--c-purple-dark: oklch(53% 0.11 304);
	--c-purple-light: oklch(64% 0.13 305);
	--c-yellow-dark: oklch(56.5% 0.11 95.5);
	--c-yellow-light: oklch(71% 0.14 96);
	--c-green-dark: oklch(55% 0.111 134);
	--c-green-light: oklch(66% 0.129 134);
	--c-red-dark: oklch(50% 0.11 30);
	--c-red-light: oklch(63% 0.13 30.5);
	--c-dark-dark: oklch(22% 0.021 255);
	--c-dark-light: oklch(27% 0.02 255);
	--c-light-dark: oklch(80% 0.005 255);
	--c-light-light: oklch(97.5% 0.005 255);

	--f-normal: "Urbanist", sans-serif;
	--f-code: "Sono", monospace;
}

body {
	font-family: var(--f-normal);
	font-size: clamp(1rem, 2vw, 1.333rem);
	background-color: var(--c-dark-dark);
	color: var(--c-light-dark);
	padding: 1em;
}

h1 {
	font-size: 2.5em;
	text-align: center;
	margin-block-end: 1em;
}

p {
	line-height: 1.5em;
}

a {
	color: var(--c-blue-light);
	text-decoration: underline;

	&:hover, &:focus {
		text-decoration: none;
		filter: brightness(1.25)
	}

	&:visited {
		color: var(--c-purple-light);
	}
}

#diagram {
	text-align: center;
}

dialog {
	position: fixed;
	inset: 50%;
	transform: translate(-50%, -50%);
	border: 0.25em solid var(--c-purple-dark);
	background: var(--c-dark-light);
	color: var(--c-light-dark);
	inline-size: min(95dvw, 35em);
	padding: 0.75em;
	gap: 1em;

	header {
		font-size: 1.125em;
		font-weight: bold;
		display: flex;
		flex-direction: row-reverse;
		gap: 0.25em;
		margin-block-end: 0.75em;

		p {
			flex: 1;
			line-height: 1.1;
		}

		button {
			all: unset;
			display: inline-flex;
			align-items: center;
			justify-content: center;
			line-height: 1;
			font-size: 1.5em;
			inline-size: 1em;
			block-size: 1em;
			cursor: pointer;
			margin: -0.25em -0.25em 0 0;
			padding: 0;
			font-weight: normal;

			&:hover, &:focus {
				color: var(--c-light-light);
			}
		}
	}

	&::backdrop {
		background: oklch(0% 0 0 / 0.5);
	}
}

dialog {
	--dur: 0.25s;
	animation:
		disappear var(--dur) ease-out,
		fade-out var(--dur) ease-out forwards,
		pop-out var(--dur) ease-out forwards;

	&::backdrop {
		animation: fade-out var(--dur) ease-out forwards;
	}

	&[open] {
		animation:
			appear var(--dur) ease-out,
			fade-in var(--dur) ease-out forwards,
			pop-in var(--dur) cubic-bezier(0.34, 1.56, 0.64, 1) forwards;

		&::backdrop {
			opacity: 0;
			animation: fade-in var(--dur) ease-out forwards;
		}
	}
}

@keyframes appear {
	0% { display: none; }
	100% { display: block; }
} @keyframes disappear {
	0% { display: block; }
	100% { display: none; }
}

@keyframes fade-in {
	0% { opacity: 0; }
	100% { opacity: 1; }
} @keyframes fade-out {
	0% { opacity: 1; }
	100% { opacity: 0; }
}

@keyframes pop-in {
	0% { transform: translate(-50%, -50%) scale(0.85); }
	100% { transform: translate(-50%, -50%) scale(1); }
} @keyframes pop-out {
	0% { transform: translate(-50%, -50%) scale(1); }
	100% { transform: translate(-50%, -50%) scale(0.85); }
}

dl {
	font-size: 0.875em;
	display: grid;
	grid-template-columns: auto 1fr;
	gap: 0.25em;
	margin-block-end: 1em;

	dt {
		font-weight: bold;

		&::after {
			content: ":";
		}
	}
}

/* Mindmap Theme
 * ************************************************************************* */
#diagram-svg {
	overflow: visible;

	.section-root :is(rect, path, circle, polygon) {
		fill: var(--c-blue-dark) !important;
		stroke: var(--c-blue-light) !important;
		stroke-width: 4;
	}

	text {
		fill: var(--c-light-light) !important;
		font-family: var(--f-normal);
	}

	.mindmap-node {
		cursor: pointer;
		transform-origin: center center;
		transform-box: fill-box;
		transition: transform 0.25s cubic-bezier(0.34, 1.56, 0.64, 1);

		&:hover, &:focus {
			transform: var(--g-transform, translate(0px, 0px)) scale(1.125);
		}

		&:active {
			transform: var(--g-transform, translate(0px, 0px)) scale(0.825);
		}
	}

	.section-0 :is(rect, path, circle, polygon) {
		fill: var(--c-red-dark) !important;
		stroke: var(--c-red-light) !important;
		stroke-width: 4;
	} .section-edge-0 {
		stroke: var(--c-red-light) !important;
	}

	.section-1 :is(rect, path, circle, polygon) {
		fill: var(--c-green-dark) !important;
		stroke: var(--c-green-light) !important;
		stroke-width: 4;
	} .section-edge-1 {
		stroke: var(--c-green-light) !important;
	}

	.section-2 :is(rect, path, circle, polygon) {
		fill: var(--c-yellow-dark) !important;
		stroke: var(--c-yellow-light) !important;
		stroke-width: 4;
	} .section-edge-2 {
		stroke: var(--c-yellow-light) !important;
	}
}